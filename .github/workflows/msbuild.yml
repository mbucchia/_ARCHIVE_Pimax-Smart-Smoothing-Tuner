name: MSBuild

on:
  push:
    branches:
    - main
    - release/*
    tags:
    - '[0-9]+.[0-9]+.[0-9]+'
  pull_request:
    branches:
    - main
    - release/*
  workflow_dispatch:

env:
  SOLUTION_FILE_PATH: pvr-tuner.sln
  BUILD_CONFIGURATION: Release

jobs:
  build:
    runs-on: windows-latest
    environment: build-and-sign

    steps:
    - name: Checkout project
      uses: actions/checkout@v2
    
    - name: Checkout submodules
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: git submodule update --init

    - name: Setup DevEnv
      uses: seanmiddleditch/gha-setup-vsdevenv@v4

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Build
      env:
        PFX_PASSWORD: ${{ secrets.PFX_PASSWORD }}
        PFX_NAME: "comodo"
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: |
        # Need to build vdproj. We must invoke this tool from inside its own folder.
        $DisableOutOfProcBuild=$(vswhere -latest -find  **\DisableOutOfProcBuild.exe)
        Push-Location $(Split-Path $DisableOutOfProcBuild)
        & $DisableOutOfProcBuild
        Pop-Location
        
        # Finally, we may build the project.
        devenv.com ${{env.SOLUTION_FILE_PATH}} /Build "${{env.BUILD_CONFIGURATION}}|x64"

    - name: Signing
      env:
        PFX_PASSWORD: ${{ secrets.PFX_PASSWORD }}
        PFX_NAME: "comodo"
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: |
        $pfxName = if ($env:PFX_NAME) { $env:PFX_NAME } else { "selfsigncert" };
        sign/signtool.exe sign /d "Pimax-Smart-Smoothing-Tuner" /du "https://github.com/mbucchia/Pimax-Smart-Smoothing-Tuner" /f sign/$pfxName.pfx /p "$env:PFX_PASSWORD" /v bin\x64\Release\libpvrclient64.dll
        md output
        copy bin\x64\Release\libpvrclient64.dll output
        copy presets\*.reg output

    - name: Publish
      uses: actions/upload-artifact@v2
      with:
        name: Pimax-Smart-Smoothing-Tuner
        path: |
          output/*
